import torch


# 张量表示一个由数值组成的数组，这个数组可能有多个维度。
# 具有一个轴的张量对应数学上的向量（vector）；
# 具有两个轴的张量对应数学上的矩阵（matrix）；
# 具有两个轴以上的张量没有特殊的数学名称。

#  arange 创建一个行向量 x。这个行向量包含以0开始的前12个整数，它们默认创建为整数。
x = torch.arange(12)
print(x)
# 通过张量的shape属性来访问张量（沿每个轴的长度）的形状 。
print(x.shape)
# 张量中元素的总数，即形状的所有元素乘积，可以检查它的大小（size）。 因为这里在处理的是一个向量，所以它的shape与它的size相同。
print(x.numel())

# 改变一个张量的形状而不改变元素数量和元素值，可以调用reshape函数。
# 可以把张量x从形状为（12,）的行向量转换为形状为（3,4）的矩阵。
# 这个新的张量包含与转换前相同的值，但是它被看成一个3行4列的矩阵。
# 要重点说明一下，虽然张量的形状发生了改变，但其元素值并没有变。 注意，通过改变张量的形状，张量的大小不会改变。
X = x.reshape(3, 4)
print(X)
# 此时 torch.Size([3, 4])
print(X.shape)


'1202422190056020577',
'1202422190056019769',
'1202422190056020573',
'1202422190056020574',
'1202422190056020575',
'1202422190056020576',
'1202422190056020578'


